[buildout]
develop = .
extends = versions.cfg
versions = versions
show-picked-versions = true
parts = test
        test-quick
        crate
        scripts
        coverage
        linter

[scripts]
recipe = zc.recipe.egg:script
interpreter = py
eggs = crate
       crate [test,sqlalchemy]

[coverage]
recipe = zc.recipe.egg
eggs = createcoverage

[crate:linux]
recipe = hexagonit.recipe.download
url = https://cdn.crate.io/downloads/releases/crate-${versions:crate_server}.tar.gz
strip-top-level-dir = true

[crate:macosx]
recipe = hexagonit.recipe.download
url = https://cdn.crate.io/downloads/releases/cratedb/x64_mac/crate-${versions:crate_server}.tar.gz
strip-top-level-dir = true

[crate:windows]
recipe = hexagonit.recipe.download
url = https://cdn.crate.io/downloads/releases/cratedb/x64_windows/crate-${versions:crate_server}.zip
strip-top-level-dir = true

[test]
relative-paths = true
recipe = zc.recipe.testrunner
defaults = ['--auto-color']
eggs = crate [test,sqlalchemy]

[test-quick]
relative-paths=true
working-directory = ${buildout:directory}
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--ignore_dir', 'testing', '--test', '!test_no_retry_on_read_timeout|test_client_threaded|test_client_keepalive|test_username|test_default_schema']
eggs = crate [test,sqlalchemy]

[linter]
recipe = zc.recipe.egg:script
eggs = flake8
scripts = flake8
initialization =
    sys.argv.extend(['--count',
                     '${buildout:directory}/src'])
