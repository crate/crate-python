name: Tests

on:
  push:
    branches: [ main ]
  pull_request: ~
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: "Python: ${{ matrix.python-version }}
     on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04']
        python-version: ['3.10', '3.11', '3.12', '3.13', '3.14']
        cratedb-version: ['nightly']

        # To save resources, only verify the most recent Python versions on macOS.
        include:
          - os: 'macos-latest'
            cratedb-version: '5.9.2'
            python-version: '3.11'
          - os: 'macos-latest'
            cratedb-version: '5.9.2'
            python-version: '3.12'
          - os: 'macos-latest'
            cratedb-version: '5.9.2'
            python-version: '3.13'

    env:
      CRATEDB_VERSION: ${{ matrix.cratedb-version }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          cache-dependency-glob: |
            setup.py
          cache-suffix: ${{ matrix.python-version }}
          enable-cache: true
          version: "latest"

      - name: Invoke tests
        run: |

          # Propagate build matrix information.
          ./devtools/setup_ci.sh

          # Bootstrap environment.
          source bootstrap.sh

          # Report about the test matrix slot.
          echo "Invoking tests with CrateDB ${CRATEDB_VERSION}"

          # Run linter.
          poe lint
          
          # Run tests.
          coverage run bin/test -vvv

          # Set the stage for uploading the coverage report.
          coverage xml

      # https://github.com/codecov/codecov-action
      - name: Upload coverage results to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: true
