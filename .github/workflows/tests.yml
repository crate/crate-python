name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: "Python: ${{ matrix.python-version }}
     SQLA: ${{ matrix.sqla-version }}
     on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        cratedb-version: ['5.1.1']
        sqla-version: ['1.3.24', '1.4.44']
        # To save resources, only use the most recent Python version on macOS.
        exclude:
          - os: 'macos-latest'
            python-version: '3.7'
          - os: 'macos-latest'
            python-version: '3.8'
          - os: 'macos-latest'
            python-version: '3.9'
          - os: 'macos-latest'
            python-version: '3.10'
      fail-fast: true
    env:
      CRATEDB_VERSION: ${{ matrix.cratedb-version }}
      SQLALCHEMY_VERSION: ${{ matrix.sqla-version }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'setup.py'

      - name: Invoke tests
        run: |

          # Propagate build matrix information.
          ./devtools/setup_ci.sh

          # Bootstrap environment.
          source bootstrap.sh

          # Report about the test matrix slot.
          echo "Invoking tests with CrateDB ${CRATEDB_VERSION} and SQLAlchemy ${SQLALCHEMY_VERSION}"

          # Invoke validation tasks.
          flake8 src bin
          coverage run bin/test -vv1

          # Set the stage for the Codecov step.
          coverage xml

      # https://github.com/codecov/codecov-action
      - name: Upload coverage results to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
