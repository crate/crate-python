=================================
SQLAlchemy Dialect and Reflection
=================================

    >>> inspector = sa.inspect(engine)

List all schemas::

    >>> inspector.get_schema_names()
    ['blob', 'doc', 'information_schema', 'pg_catalog', 'sys']

List all tables::

    >>> inspector.get_table_names()
    ['characters', 'cities', 'locations']

    >>> set(['checks', 'cluster', 'jobs', 'jobs_log']).issubset(inspector.get_table_names(schema='sys'))
    True

Get default schema name::

    >>> inspector.default_schema_name
    'doc'

Create a sqlalchemy table object::

    >>> meta = sa.MetaData()
    >>> table = sa.Table(
    ...     "characters", meta,
    ...     autoload=True,
    ...     autoload_with=engine)

    >>> table.columns.get('name')
    Column('name', String(), table=<characters>)

    >>> table.primary_key
    PrimaryKeyConstraint(Column('id', String(), table=<characters>, primary_key=True...
